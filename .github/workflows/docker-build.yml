name: Build Docker Images

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get Dockerfile list
        id: set-matrix
        run: |
          DOCKERFILES=$(find . -name "*.Dockerfile" -type f | jq -R -s -c 'split("\n")[:-1]')
          echo "matrix=${DOCKERFILES}" >> $GITHUB_OUTPUT

  build:
    needs: prepare
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dockerfile: ${{ fromJson(needs.prepare.outputs.matrix) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get image name
        id: image-name
        run: |
          # Extract basename without .Dockerfile extension
          BASENAME=$(basename ${{ matrix.dockerfile }} .Dockerfile)
          if [ "$BASENAME" = "default" ]; then
            echo "name=ozdentarikcan/docker-imgs" >> $GITHUB_OUTPUT
          else
            echo "name=ozdentarikcan/docker-${BASENAME}" >> $GITHUB_OUTPUT
          fi

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ghcr.io/${{ steps.image-name.outputs.name }}:latest
            ghcr.io/${{ steps.image-name.outputs.name }}:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64
